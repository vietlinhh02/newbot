const { EmbedBuilder, PermissionsBitField } = require('discord.js');
const { setupRoleHierarchy } = require('../../utils/cultivationData');

module.exports = {
    name: 'setup',
    aliases: ['thi·∫øt_l·∫≠p', 'cai_dat'],
    description: 'Thi·∫øt l·∫≠p bot cho server (t·∫°o role cultivation, setup hierarchy)',
    usage: '!setup [roles]',
    examples: [
        '!setup - Setup t·∫•t c·∫£',
        '!setup roles - Ch·ªâ setup roles cultivation'
    ],
    permissions: 'ADMINISTRATOR',
    guildOnly: true,
    category: 'config',

    async execute(message, args, client) {
        try {
            // Check permissions
            if (!message.member.permissions.has(PermissionsBitField.Flags.Administrator)) {
                return message.reply('‚ùå B·∫°n c·∫ßn quy·ªÅn Administrator ƒë·ªÉ s·ª≠ d·ª•ng l·ªánh n√†y!');
            }

            const action = args[0]?.toLowerCase();

            if (action === 'roles' || !action) {
                // Setup roles
                const setupEmbed = new EmbedBuilder()
                    .setTitle('üîß ƒêang thi·∫øt l·∫≠p Role Hierarchy...')
                    .setDescription('Bot ƒëang t·∫°o v√† s·∫Øp x·∫øp c√°c role cultivation...')
                    .setColor(0x00ff88)
                    .setTimestamp();

                const setupMessage = await message.reply({ embeds: [setupEmbed] });

                try {
                    const success = await setupRoleHierarchy(message.guild);
                    
                    if (success) {
                        const successEmbed = new EmbedBuilder()
                            .setTitle('‚úÖ Thi·∫øt l·∫≠p th√†nh c√¥ng!')
                            .setDescription('ƒê√£ t·∫°o v√† s·∫Øp x·∫øp t·∫•t c·∫£ role cultivation theo th·ª© t·ª± hierarchy.')
                            .setColor(0x00ff00)
                            .addFields([
                                {
                                    name: 'üé≠ Roles ƒë√£ t·∫°o',
                                    value: 'T·∫•t c·∫£ roles cultivation ƒë√£ ƒë∆∞·ª£c t·∫°o v·ªõi m√†u s·∫Øc v√† th·ª© t·ª± ph√π h·ª£p',
                                    inline: false
                                },
                                {
                                    name: 'üìä Hierarchy',
                                    value: 'Role cao h∆°n ƒë∆∞·ª£c ƒë·∫∑t ·ªü v·ªã tr√≠ cao h∆°n trong danh s√°ch',
                                    inline: false
                                },
                                {
                                    name: 'üí° L∆∞u √Ω',
                                    value: 'Bot c·∫ßn c√≥ role cao h∆°n c√°c role cultivation ƒë·ªÉ c√≥ th·ªÉ g√°n role cho members',
                                    inline: false
                                }
                            ])
                            .setTimestamp()
                            .setFooter({ 
                                text: `Setup by ${message.author.username}`, 
                                iconURL: message.author.displayAvatarURL() 
                            });

                        await setupMessage.edit({ embeds: [successEmbed] });
                    } else {
                        throw new Error('Setup failed');
                    }
                } catch (error) {
                    console.error('Setup error:', error);
                    
                    const errorEmbed = new EmbedBuilder()
                        .setTitle('‚ùå L·ªói thi·∫øt l·∫≠p!')
                        .setDescription('Kh√¥ng th·ªÉ thi·∫øt l·∫≠p role hierarchy.')
                        .setColor(0xff4444)
                        .addFields([
                            {
                                name: 'üîç Nguy√™n nh√¢n c√≥ th·ªÉ',
                                value: '‚Ä¢ Bot kh√¥ng c√≥ quy·ªÅn Manage Roles\n‚Ä¢ Role c·ªßa bot th·∫•p h∆°n role c·∫ßn t·∫°o\n‚Ä¢ Server ƒë√£ ƒë·∫°t gi·ªõi h·∫°n s·ªë role',
                                inline: false
                            },
                            {
                                name: 'üõ†Ô∏è C√°ch kh·∫Øc ph·ª•c',
                                value: '‚Ä¢ Ki·ªÉm tra quy·ªÅn c·ªßa bot\n‚Ä¢ Di chuy·ªÉn role bot l√™n cao h∆°n\n‚Ä¢ Li√™n h·ªá admin server ƒë·ªÉ h·ªó tr·ª£',
                                inline: false
                            }
                        ])
                        .setTimestamp();

                    await setupMessage.edit({ embeds: [errorEmbed] });
                }
            } else {
                // Show available options
                const helpEmbed = new EmbedBuilder()
                    .setTitle('üîß Setup Bot')
                    .setDescription('Thi·∫øt l·∫≠p bot cho server c·ªßa b·∫°n')
                    .setColor(0x0099ff)
                    .addFields([
                        {
                            name: 'üìã C√°c t√πy ch·ªçn',
                            value: '‚Ä¢ `!setup` - Thi·∫øt l·∫≠p t·∫•t c·∫£\n‚Ä¢ `!setup roles` - Ch·ªâ thi·∫øt l·∫≠p roles cultivation',
                            inline: false
                        },
                        {
                            name: '‚ö†Ô∏è Y√™u c·∫ßu',
                            value: '‚Ä¢ Quy·ªÅn Administrator\n‚Ä¢ Bot c·∫ßn quy·ªÅn Manage Roles\n‚Ä¢ Role bot ph·∫£i cao h∆°n roles c·∫ßn t·∫°o',
                            inline: false
                        }
                    ])
                    .setTimestamp()
                    .setFooter({ 
                        text: `Requested by ${message.author.username}`, 
                        iconURL: message.author.displayAvatarURL() 
                    });

                await message.reply({ embeds: [helpEmbed] });
            }

        } catch (error) {
            console.error('Error in setup command:', error);
            await message.reply(`‚ùå L·ªói setup: ${error.message}`);
        }
    }
};